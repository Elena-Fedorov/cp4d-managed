"use strict";(self.webpackChunkexample=self.webpackChunkexample||[]).push([[4080],{3455:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return s},default:function(){return d}});var n,i=a(3366),l=(a(7294),a(4983)),r=a(4295),o=["components"],s={},u=(n="InlineNotification",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",e)}),c={_frontmatter:s},p=r.Z;function d(e){var t=e.components,a=(0,i.Z)(e,o);return(0,l.kt)(p,Object.assign({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",null,"Running the Cloud Pak Deployer on an existing OpenShift cluster"),(0,l.kt)("p",null,"When running the Cloud Pak Deployer on an existing OpenShift cluster, the following is assumed:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The OpenShift cluster is up and running with sufficient worker nodes"),(0,l.kt)("li",{parentName:"ul"},"The appropriate storage class(es) have been pre-created"),(0,l.kt)("li",{parentName:"ul"},"You have cluster administrator permissions to OpenShift")),(0,l.kt)("h2",null,"Acquire an IBM Cloud Pak Entitlement Key"),(0,l.kt)("p",null,"If you want to pull the Cloud Pak images from the entitled registry (i.e. an online install), or if you want to mirror the images to your private registry, you need to download the entitlement key. You can skip this step if you’re installing from a private registry and all Cloud Pak images have already been downloaded to the private registry."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Navigate to ",(0,l.kt)("a",{parentName:"li",href:"https://myibm.ibm.com/products-services/containerlibrary"},"https://myibm.ibm.com/products-services/containerlibrary")," and login with your IBMId credentials"),(0,l.kt)("li",{parentName:"ul"},"Select ",(0,l.kt)("strong",{parentName:"li"},"Get Entitlement Key")," and create a new key (or copy your existing key)"),(0,l.kt)("li",{parentName:"ul"},"Copy the key value")),(0,l.kt)(u,{kind:"warning",mdxType:"InlineNotification"},"As stated for the API key, you can choose to download the entitlement key to a file. However, when we reference the entitlement key, we mean the 80+ character string that is displayed, not the file."),(0,l.kt)("h2",null,"Prepare for running"),(0,l.kt)("h3",null,"Set environment variables"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"export CP_ENTITLEMENT_KEY=your_cp_entitlement_key\n\nexport STATUS_DIR=/data/status/sample\nexport CONFIG_DIR=/data/config/sample\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"CP_ENTITLEMENT_KEY"),": This is the entitlement key you acquired as per the instructions above, this is a 80+ character string"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"STATUS_DIR"),": The directory where the Cloud Pak Deployer keeps all status information and logs files. ",(0,l.kt)("strong",{parentName:"li"},"Please note")," that if you have chosen to use a File Vault, the properties file is keps under the ",(0,l.kt)("inlineCode",{parentName:"li"},"vault")," directory within the status directory"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"CONFIG_DIR"),": Directory that holds the configuration, it must have ",(0,l.kt)("inlineCode",{parentName:"li"},"config"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"defaults")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"inventory")," subdirectories")),(0,l.kt)(u,{mdxType:"InlineNotification"},"Cloud Pak Deployer uses the status directory to logs its activities and also to keep track of its running state. For a given environment you're provisioning or destroying, you should always specify the same status directory to avoid contention between different deploy runs. You can run the Cloud Pak Deployer in parallel for different environments (different configuration directories)."),(0,l.kt)("h3",null,"Log in to OpenShift and store ",(0,l.kt)("inlineCode",{parentName:"h3"},"kubeconfig")," secret"),(0,l.kt)("p",null,"Because you will be deploying the Cloud Pak on an existing OpenShift cluster, the deployer needs to be able to access OpenShift. Rather than the many variations of OpenShift authentication that could be applicable, the deployer expects a ",(0,l.kt)("inlineCode",{parentName:"p"},"kubeconfig")," file with the cluster’s credentials to be stored as a secret in the vault."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Log in to OpenShift as a cluster administrator using your method of choice"),(0,l.kt)("li",{parentName:"ul"},"Locate the Kubernetes config file. If you have logged in with the OpenShift client, thie is typically ",(0,l.kt)("inlineCode",{parentName:"li"},"~/.kube/config")),(0,l.kt)("li",{parentName:"ul"},"Now, store the Kubernetes config file as a vault secret")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"./cp-deploy.sh vault set \\\n    --vault-secret kubeconfig \\\n    --vault-secret-file ~/.kube/config\n")),(0,l.kt)("p",null,"The deployer will retrieve this secret from the vault when it requires access to OpenShift. If the secret cannot be found or if it is invalid or the OpenShift login token has expired, the deployer will fail and you will need to update the secret with a valid Kubernetes config file."),(0,l.kt)("h2",null,"Run the Cloud Pak Deployer"),(0,l.kt)("p",null,"To run the container using a local configuration input directory and a data directory where temporary and state is kept, use the example below. If you don’t specify the status directory, the deployer will automatically create a temporary directory. Please note that the status directory will also hold secrets if you have configured a flat file vault. If you lose the directory, you will not be able to make changes to the configuration and adjust the deployment. It is best to specify a permanent directory that you can reuse later. If you specify an existing directory the current user ",(0,l.kt)("strong",{parentName:"p"},"must")," be the owner of the directory. Failing to do so may cause the container to fail with insufficient permissions."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"./cp-deploy.sh env apply\n")),(0,l.kt)("p",null,"If you have chosen to use dynamic properties (extra variables), you can specify these on the command line, see below. Extra variables are covered in ",(0,l.kt)("a",{parentName:"p",href:"/cp4d-managed/advanced/advanced-configuration"},"advanced configuration"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"./cp-deploy.sh env apply -e env_id=acme-01\n")),(0,l.kt)("p",null,"In the above command, the ",(0,l.kt)("inlineCode",{parentName:"p"},"env_id")," extra variable defines the names of the objects that are being created; these are referenced in the ",(0,l.kt)("inlineCode",{parentName:"p"},".yaml")," configuration files as ",(0,l.kt)("inlineCode",{parentName:"p"},"{{ env_id }}"),". For more information about the extra (dynamic) variables, see ",(0,l.kt)("a",{parentName:"p",href:"/cp4d-managed/advanced/advanced-configuration"},"advanced configuration"),"."),(0,l.kt)("p",null,"When running the command, the container will start as a daemon and the command will tail-follow the logs. You can press Ctrl-C at any time to interrupt the logging but the container will continue to run in the background."),(0,l.kt)("p",null,"You can return to view the logs as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"./cp-deploy.sh env logs\n")),(0,l.kt)("p",null,"Preparing OpenShift and installing the Cloud Pak will take a long time, typically between 1-5 hours,dependent on which Cloud Pak cartridges you configured. For estimated duration of the steps, refer to ",(0,l.kt)("a",{parentName:"p",href:"/cp4d-managed/cpd-design/timings"},"Timings"),"."),(0,l.kt)("p",null,"If you need to interrupt the automation, use CTRL-C to stop the logging output and then use:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"./cp-deploy.sh env kill\n")),(0,l.kt)("h2",null,"On failure"),(0,l.kt)("p",null,"If the Cloud Pak Deployer fails, for example because certain infrastructure components are temporarily not available, fix the cause if needed and then just re-run it with the same ",(0,l.kt)("inlineCode",{parentName:"p"},"CONFIG_DIR")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"STATUS_DIR")," as well extra variables. The provisioning process has been designed to be idempotent and it will not redo actions that have already completed successfully."),(0,l.kt)("h2",null,"Finishing up"),(0,l.kt)("p",null,"Once the process has finished, it will output the URLs by which you can access the deployed Cloud Pak. You can also find this information under the ",(0,l.kt)("inlineCode",{parentName:"p"},"cloud-paks")," directory in the status directory you specified."),(0,l.kt)("p",null,"To retrieve the Cloud Pak URL(s):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"cat $STATUS_DIR/cloud-paks/*\n")),(0,l.kt)("p",null,"This will show the Cloud Pak URLs:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-output"},"Cloud Pak for Data URL for cluster acme-01 and project zen-40:\nhttps://cpd-zen-40.apps.acme-01.example.com\n")),(0,l.kt)("p",null,"List the secrets in the vault:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"./cp-deploy.sh vault list\n")),(0,l.kt)("p",null,"This will show something similar to the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-output"},"Secret list for group sample:\n- ibm_cp_entitlement_key\n- kubeconfig\n- cp4d_admin_zen_sample_sample\n")),(0,l.kt)("p",null,"You can then retrieve the Cloud Pak for Data admin password like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"./cp-deploy.sh vault get --vault-secret cp4d_admin_zen_sample_sample\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-output"},"PLAY [Secrets] *****************************************************************\nincluded: /automation_script/automation-roles/99-generic/vault/vault-get-secret/tasks/get-secret-file.yml for localhost\ncp4d_admin_zen_sample_sample: gelGKrcgaLatBsnAdMEbmLwGr\n")))}d.isMDXComponent=!0},4295:function(e,t,a){a.d(t,{Z:function(){return N}});var n=a(7294),i=a(8650),l=a.n(i),r=a(5444),o=a(5426),s=a(3321),u=a(5900),c=a.n(u),p=function(e){var t,a=e.title,i=e.theme,l=e.tabs,r=void 0===l?[]:l;return n.createElement("div",{className:c()("PageHeader-module--page-header--NqfPe",(t={},t["PageHeader-module--with-tabs--vbQ-W"]=r.length,t["PageHeader-module--dark-mode--WCeH8"]="dark"===i,t))},n.createElement("div",{className:"bx--grid"},n.createElement("div",{className:"bx--row"},n.createElement("div",{className:"bx--col-lg-12"},n.createElement("h1",{id:"page-title",className:"PageHeader-module--text--Er2EO"},a)))))},d=function(e){var t=e.relativePagePath,a=e.repository,i=(0,r.useStaticQuery)("1364590287").site.siteMetadata.repository,l=a||i,o=l.baseUrl,s=l.subDirectory,u=o+"/edit/"+l.branch+s+"/src/pages"+t;return o?n.createElement("div",{className:"bx--row EditLink-module--row--BEmSX"},n.createElement("div",{className:"bx--col"},n.createElement("a",{className:"EditLink-module--link--IDrl1",href:u},"Edit this page on GitHub"))):null},m=a(4275),h=a(1721),k=function(e){function t(){return e.apply(this,arguments)||this}return(0,h.Z)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,a=e.tabs,i=e.slug,o=i.split("/").filter(Boolean).slice(-1)[0],s=a.map((function(e){var t,a=l()(e,{lower:!0,strict:!0}),s=a===o,u=new RegExp(o+"/?(#.*)?$"),p=i.replace(u,a);return n.createElement("li",{key:e,className:c()((t={},t["PageTabs-module--selected-item--aBB0K"]=s,t),"PageTabs-module--list-item--024o6")},n.createElement(r.Link,{className:"PageTabs-module--link--Kz-7R",to:""+p},e))}));return n.createElement("div",{className:"PageTabs-module--tabs-container--Cdfzw"},n.createElement("div",{className:"bx--grid"},n.createElement("div",{className:"bx--row"},n.createElement("div",{className:"bx--col-lg-12 bx--col-no-gutter"},n.createElement("nav",{"aria-label":t},n.createElement("ul",{className:"PageTabs-module--list--xLqxG"},s))))))},t}(n.Component),f=k,g=a(2881),y=a(6958),v=a(36),b=function(e){var t=e.date,a=new Date(t);return t?n.createElement(v.X2,{className:"last-modified-date-module--row--XJoYQ"},n.createElement(v.sg,null,n.createElement("div",{className:"last-modified-date-module--text--ogPQF"},"Page last updated: ",a.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null},N=function(e){var t=e.pageContext,a=e.children,i=e.location,u=e.Title,c=t.frontmatter,h=void 0===c?{}:c,k=t.relativePagePath,v=t.titleType,N=h.tabs,w=h.title,C=h.theme,E=h.description,P=h.keywords,x=h.date,T=(0,y.Z)().interiorTheme,_=(0,r.useStaticQuery)("2456312558").site.pathPrefix,I=_?i.pathname.replace(_,""):i.pathname,S=N?I.split("/").filter(Boolean).slice(-1)[0]||l()(N[0],{lower:!0}):"",D=C||T;return n.createElement(s.Z,{tabs:N,homepage:!1,theme:D,pageTitle:w,pageDescription:E,pageKeywords:P,titleType:v},n.createElement(p,{title:u?n.createElement(u,null):w,label:"label",tabs:N,theme:D}),N&&n.createElement(f,{title:w,slug:I,tabs:N,currentTab:S}),n.createElement(g.Z,{padded:!0},a,n.createElement(d,{relativePagePath:k}),n.createElement(b,{date:x})),n.createElement(m.Z,{pageContext:t,location:i,slug:I,tabs:N,currentTab:S}),n.createElement(o.Z,null))}}}]);
//# sourceMappingURL=component---src-pages-iacs-offering-run-on-existing-openshift-mdx-ededdd76241167bf16af.js.map